generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_LOCAL")
}

model NovosTryouts {
  id          Int    @id @default(autoincrement())
  tryout      String @db.VarChar(250)
  molde       String @db.VarChar(250)
  cliente     String @db.VarChar(250)
  produto     String @db.VarChar(250)
  cod_produto String @db.VarChar(250)
}

model Fti {
  id                   Int                    @id @default(autoincrement())
  produto              String                 @db.VarChar(250)
  cod_produto          String                 @db.VarChar(250)
  cod_molde            String                 @db.VarChar(250)
  cliente              String                 @db.VarChar(250)
  modelo               String                 @db.VarChar(250)
  maquina              String                 @db.VarChar(250)
  materia_prima        String                 @db.VarChar(250)
  desc_materia_prima   String                 @db.VarChar(250)
  cor                  String                 @db.VarChar(250)
  qtd_cavidade         String                 @default("0") @db.VarChar(250)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  Refrigeracao         Refrigeracao[]
  BicoCamaraQuente     BicoCamaraQuente[]
  Cavidade             Cavidade[]
  Cursos               Cursos[]
  Dimensao             Dimensao[]
  DispositivoSeguranca DispositivoSeguranca[]
  Dosador              Dosador[]
  Dosagem              Dosagem[]
  Estufagem            Estufagem[]
  Homologacao          Homologacao[]
  Imagens              Imagens[]
  InfoGeraisRegulagem  InfoGeraisRegulagem[]
  Injecao              Injecao[]
  Pressoes             Pressoes[]
  ProgramacaoMachos    ProgramacaoMachos[]
  Recalque             Recalque[]
  Resumo               Resumo[]
  Sequenciador         Sequenciador[]
  TemperaturaCilindro  TemperaturaCilindro[]
  Tempos               Tempos[]
}

model Homologacao {
  id                Int    @id @default(autoincrement())
  ftiId             Int
  revisao           Int
  user_created      Json
  user_homologation Json?
  statusId          Int
  Fti               Fti    @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_homologacao")
  Status            Status @relation(fields: [statusId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([ftiId])
  @@index([statusId])
}

model Status {
  id          Int           @id @default(autoincrement())
  descricao   String        @default("") @db.VarChar(250)
  Homologacao Homologacao[]
}

model Refrigeracao {
  id           Int  @id @default(autoincrement())
  ftiId        Int
  refrigeracao Json
  Fti          Fti  @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_refrigeracao_agua")

  @@index([ftiId])
}

model BicoCamaraQuente {
  id                       Int                                       @id @default(autoincrement())
  ftiId                    Int
  check_bico_camara_quente BicoCamaraQuente_check_bico_camara_quente
  check_tipos_temperatura  BicoCamaraQuente_check_tipos_temperatura
  temperatura_programada   Json?
  Fti                      Fti                                       @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_bico_camara_quente")

  @@index([ftiId])
}

model Cavidade {
  id       Int   @id @default(autoincrement())
  ftiId    Int
  cavidade Float @db.Float
  Fti      Fti   @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fit_cavidade")

  @@index([ftiId])
}

model Cursos {
  id                    Int    @id @default(autoincrement())
  ftiId                 Int
  curso_abertura        String @default("0") @db.VarChar(250)
  curso_descompressao   String @default("0") @db.VarChar(250)
  curso_avanco_extrator String @default("0") @db.VarChar(250)
  inicio_protecao_molde String @default("0") @db.VarChar(250)
  Fti                   Fti    @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_cursos")

  @@index([ftiId])
}

model Dimensao {
  id          Int    @id @default(autoincrement())
  ftiId       Int
  altura      String @default("0") @db.VarChar(250)
  comprimento String @default("0") @db.VarChar(250)
  largura     String @default("0") @db.VarChar(250)
  Fti         Fti    @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_dimensao")

  @@index([ftiId])
}

model DispositivoSeguranca {
  id       Int                            @id @default(autoincrement())
  ftiId    Int
  sensor   DispositivoSeguranca_sensor?
  micro_sw DispositivoSeguranca_micro_sw?
  Fti      Fti                            @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_dispositivo_seg")

  @@index([ftiId])
}

model Dosador {
  id                 Int                   @id @default(autoincrement())
  ftiId              Int
  check_dosador      Dosador_check_dosador
  velocidade_dosagem String?               @default("0") @db.VarChar(250)
  tempo_dosagem      String?               @default("0") @db.VarChar(250)
  Fti                Fti                   @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_dosador")

  @@index([ftiId])
}

model Dosagem {
  id      Int   @id @default(autoincrement())
  ftiId   Int
  dosagem Json?
  Fti     Fti   @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_dosagem")

  @@index([ftiId])
}

model Estufagem {
  id                Int                        @id @default(autoincrement())
  fitId             Int?
  check_estufagem   Estufagem_check_estufagem?
  temperatura_ini   String?                    @db.VarChar(50)
  temperatura_final String?                    @db.VarChar(50)
  tempo             String?                    @db.VarChar(50)
  Fti               Fti?                       @relation(fields: [fitId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_estufagem")

  @@index([fitId])
}

model Imagens {
  id          Int     @id @default(autoincrement())
  ftiId       Int
  img_produto String? @db.VarChar(250)
  img_camara  String? @db.VarChar(250)
  Fti         Fti     @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_imagens")

  @@index([ftiId])
}

model InfoGeraisRegulagem {
  id               Int    @id @default(autoincrement())
  ftiId            Int
  bucha_injecao    String @db.VarChar(250)
  bico_injecao     String @db.VarChar(250)
  prog_injecao     String @db.VarChar(250)
  modo             String @db.VarChar(250)
  ciclo_total      String @db.VarChar(250)
  producao_horaria String @default("0") @db.VarChar(50)
  Fti              Fti    @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_info_gerais")

  @@index([ftiId])
}

model Injecao {
  id      Int  @id @default(autoincrement())
  ftiId   Int
  injecao Json
  Fti     Fti  @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_injecao")

  @@index([ftiId])
}

model Pressoes {
  id                        Int    @id @default(autoincrement())
  ftiId                     Int
  pressao_media             String @default("0") @db.VarChar(250)
  pressao_travamento        String @default("0") @db.VarChar(250)
  pressao_avanco_1          String @default("0") @db.VarChar(250)
  pressao_avanco_2          String @default("0") @db.VarChar(250)
  pressao_recuo_1           String @default("0") @db.VarChar(250)
  pressao_recuo_2           String @default("0") @db.VarChar(250)
  pressao_descompressao     String @default("0") @db.VarChar(250)
  vel_avanco_extrador_1     String @default("0") @db.VarChar(250)
  vel_avanco_extrador_2     String @default("0") @db.VarChar(250)
  vel_recuo_extrator_1      String @default("0") @db.VarChar(250)
  vel_recuo_extrator_2      String @default("0") @db.VarChar(250)
  pressao_descomp_traseira  String @default("0") @db.VarChar(250)
  pressao_descomp_dianteira String @default("0") @db.VarChar(250)
  vel_descomp_traseira      String @default("0") @db.VarChar(250)
  vel_descomp_dianteira     String @default("0") @db.VarChar(250)
  Fti                       Fti    @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_pressoes")

  @@index([ftiId])
}

model ProgramacaoMachos {
  id                       Int                                        @id @default(autoincrement())
  ftiId                    Int
  check_programacao_machos ProgramacaoMachos_check_programacao_machos
  macho                    Json?
  Fti                      Fti                                        @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_prog_machos")

  @@index([ftiId])
}

model Recalque {
  id       Int   @id @default(autoincrement())
  ftiId    Int
  recalque Json?
  Fti      Fti   @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_recalque")

  @@index([ftiId])
}

model Resumo {
  id                  Int     @id @default(autoincrement())
  ftiId               Int
  peso_total_cavidade String  @default("") @db.VarChar(50)
  peso_total_injecao  String  @default("") @db.VarChar(50)
  peso_medio_bruto    String  @default("") @db.VarChar(50)
  peso_medio_liquido  String  @default("") @db.VarChar(50)
  peso_galho          String  @default("") @db.VarChar(50)
  outros              String? @db.VarChar(50)
  Fti                 Fti     @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_resumo")

  @@index([ftiId])
}

model Sequenciador {
  id                 Int                             @id @default(autoincrement())
  ftiId              Int
  check_sequenciador Sequenciador_check_sequenciador
  sequenciador       Json?
  Fti                Fti                             @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_sequenciador")

  @@index([ftiId])
}

model TemperaturaCilindro {
  id     Int     @id @default(autoincrement())
  ftiId  Int
  zona_1 String? @default("0") @db.VarChar(250)
  zona_2 String? @default("0") @db.VarChar(250)
  zona_3 String? @default("0") @db.VarChar(250)
  zona_4 String? @default("0") @db.VarChar(250)
  zona_5 String? @default("0") @db.VarChar(250)
  zona_6 String? @default("0") @db.VarChar(250)
  zona_7 String? @default("0") @db.VarChar(250)
  Fti    Fti     @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_temperatura_cilindro")

  @@index([ftiId])
}

model Tempos {
  id                   Int    @id @default(autoincrement())
  ftiId                Int
  tempo_fechamento     String @default("0") @db.VarChar(250)
  tempo_injecao        String @default("0") @db.VarChar(250)
  tempo_recalque       String @default("0") @db.VarChar(250)
  tempo_resfriamento   String @default("0") @db.VarChar(250)
  tempo_abertura_molde String @default("0") @db.VarChar(250)
  tempo_extracao       String @default("0") @db.VarChar(250)
  reciclo_outros       String @default("0") @db.VarChar(250)
  Fti                  Fti    @relation(fields: [ftiId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK1_fti_tempos")

  @@index([ftiId])
}

enum BicoCamaraQuente_check_bico_camara_quente {
  true
  false
}

enum Dosador_check_dosador {
  true
  false
}

enum Estufagem_check_estufagem {
  true
  false
}

enum Sequenciador_check_sequenciador {
  true
  false
}

enum DispositivoSeguranca_sensor {
  true
  false
}

enum DispositivoSeguranca_micro_sw {
  true
  false
}

enum ProgramacaoMachos_check_programacao_machos {
  true
  false
}

enum BicoCamaraQuente_check_tipos_temperatura {
  k
  j
}
